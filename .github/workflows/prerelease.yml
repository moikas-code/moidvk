name: Pre-release

on:
  push:
    branches:
      - develop
      - beta
      - alpha
  workflow_dispatch:
    inputs:
      prerelease_type:
        description: 'Pre-release type'
        required: true
        type: choice
        options:
          - alpha
          - beta
          - rc

jobs:
  prerelease:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/beta' || github.ref == 'refs/heads/alpha' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build:all

      - name: Run tests
        run: bun test

      - name: Run linting
        run: bun run lint

      - name: Determine pre-release type
        id: prerelease
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TYPE="${{ github.event.inputs.prerelease_type }}"
          elif [ "${{ github.ref }}" = "refs/heads/alpha" ]; then
            TYPE="alpha"
          elif [ "${{ github.ref }}" = "refs/heads/beta" ]; then
            TYPE="beta"
          else
            TYPE="alpha"
          fi
          echo "type=$TYPE" >> $GITHUB_OUTPUT

      - name: Generate pre-release version
        id: version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(bun run --silent -e "console.log(require('./package.json').version)")

          # Generate timestamp-based pre-release version
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=${GITHUB_SHA:0:7}

          # Create pre-release version
          PRERELEASE_VERSION="${CURRENT_VERSION}-${{ steps.prerelease.outputs.type }}.${TIMESTAMP}.${SHORT_SHA}"

          echo "version=$PRERELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "Generated pre-release version: $PRERELEASE_VERSION"

      - name: Update package.json for pre-release
        run: |
          bun run --silent -e "
            const pkg = require('./package.json');
            pkg.version = '${{ steps.version.outputs.version }}';
            pkg.private = false;
            require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Configure npm registry
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish pre-release to npm
        run: |
          npm publish --access public --tag ${{ steps.prerelease.outputs.type }}

      - name: Create pre-release GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Pre-release v${{ steps.version.outputs.version }}
          body: |
            ## Pre-release ${{ steps.prerelease.outputs.type }}

            This is a pre-release version built from the `${{ github.ref_name }}` branch.

            **⚠️ Warning**: This is a pre-release version and may contain bugs or incomplete features.

            ## Installation

            ```bash
            npm install -g moidvk@${{ steps.prerelease.outputs.type }}
            ```

            ## Changes

            - Built from commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Timestamp: $(date -u)

            ## Usage

            ```bash
            moidvk serve
            ```
          draft: false
          prerelease: true

      - name: Summary
        run: |
          echo "✅ Pre-release published successfully"
          echo "📦 Published: moidvk@${{ steps.version.outputs.version }}"
          echo "🏷️ Tag: ${{ steps.prerelease.outputs.type }}"
          echo "🔗 Install with: npm install -g moidvk@${{ steps.prerelease.outputs.type }}"
          echo "🔗 View on npm: https://www.npmjs.com/package/moidvk"
